[
  Document(page_content=
  'Document loaders | 🦜️🔗 Langchain',
  metadata=
  {
    'source': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/',
    'title': 'Document loaders | 🦜️🔗 Langchain',
    'description': 'Head to Integrations for documentation on built-in document loader integrations with 3rd-party tools.',
    'language': 'en',
    'start_index': 5
  }
  ),
  Document(page_content=
  "Skip to main contentDocsUse casesIntegrationsGuidesAPIMorePeopleVersioningChangelogContributingTemplatesCookbooksTutorialsYouTube🦜️🔗LangSmithLangSmith DocsLangServe GitHubTemplates GitHubTemplates HubLangChain HubJS/TS DocsChatSearchGet startedIntroductionInstallationQuickstartSecurityLangChain Expression LanguageGet startedWhy use LCELInterfaceStreamingHow toCookbookLangChain Expression Language (LCEL)ModulesModel I/ORetrievalDocument loadersCSVFile DirectoryHTMLJSONMarkdownPDFText SplittersRetrievalText embedding modelsVector storesRetrieversIndexingAgentsChainsMoreLangServeLangSmithLangGraphModulesRetrievalDocument loadersOn this pageDocument loadersinfoHead to Integrations for documentation on built-in document loader integrations with 3rd-party tools.Use document loaders to load data from a source as Document's. A Document is a piece of text\nand associated metadata. For example, there are document loaders for loading a simple .txt file, for loading the text",
  metadata=
  {
    'source': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/',
    'title': 'Document loaders | 🦜️🔗 Langchain',
    'description': 'Head to Integrations for documentation on built-in document loader integrations with 3rd-party tools.',
    'language': 'en',
    'start_index': 45
  }
  ),
  Document(page_content=
  'and associated metadata. For example, there are document loaders for loading a simple .txt file, for loading the text\ncontents of any web page, or even for loading a transcript of a YouTube video.Document loaders provide a "load" method for loading data as documents from a configured source. They optionally',
  metadata=
  {
    'source': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/',
    'title': 'Document loaders | 🦜️🔗 Langchain',
    'description': 'Head to Integrations for documentation on built-in document loader integrations with 3rd-party tools.',
    'language': 'en',
    'start_index': 904
  }
  ),
  Document(page_content=
  'implement a "lazy load" as well for lazily loading data into memory.Get started\u200bThe simplest loader reads in a file as text and places it all into one document.from langchain_community.document_loaders import TextLoaderloader = TextLoader("./index.md")loader.load()[    Document(page_content=\'---\\nsidebar_position: 0\\n---\\n# Document loaders\\n\\nUse document loaders to load data from a source as `Document`\\\'s. A `Document` is a piece of text\\nand associated metadata. For example, there are document loaders for loading a simple `.txt` file, for loading the text\\ncontents of any web page, or even for loading a transcript of a YouTube video.\\n\\nEvery document loader exposes two methods:\\n1. "Load": load documents from the configured source\\n2. "Load and split": load documents from the configured source and split them using the passed in text splitter\\n\\nThey optionally implement:\\n\\n3. "Lazy load": load documents into memory lazily\\n\', metadata={\'source\':',
  metadata=
  {
    'source': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/',
    'title': 'Document loaders | 🦜️🔗 Langchain',
    'description': 'Head to Integrations for documentation on built-in document loader integrations with 3rd-party tools.',
    'language': 'en',
    'start_index': 1213
  }
  ),
  Document(page_content=
  'load documents from the configured source and split them using the passed in text splitter\\n\\nThey optionally implement:\\n\\n3. "Lazy load": load documents into memory lazily\\n\', metadata={\'source\': \'../docs/docs/modules/data_connection/document_loaders/index.md\'})]Help us out by providing feedback on this documentation page:PreviousRetrievalNextCSVGet startedCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogYouTubeCopyright © 2024 LangChain, Inc.',
  metadata=
  {
    'source': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/',
    'title': 'Document loaders | 🦜️🔗 Langchain',
    'description': 'Head to Integrations for documentation on built-in document loader integrations with 3rd-party tools.',
    'language': 'en',
    'start_index': 1980
  }
  )
]
